import{d as h,u as k,l as v,h as C,p as S,o as a,c as r,F as p,a as d,g as l,t as g,n as q,z as x,f as z,x as B,j as D}from"./index-DLbVpaQ3.js";const E={class:"task-apply"},L={class:"list"},N=["onClick"],I=h({__name:"index",setup(w){const m=k(),u=v({}),c=(e,n)=>{if(e)try{return JSON.parse(e)[n]}catch{return e.split(",")[n]}return""},y=C(()=>D("akAllDict",!0)["sys-flow"]||{}),_=()=>{B("designList",{query:{type:3}}).then(n=>{const o=n.data.list,s=[];o.forEach(t=>{s.includes(t.category)||s.push(t.category)}),s.forEach(t=>{u.value[t]=o.filter(i=>i.category===t)})})},f=e=>{m.push({path:"/task/apply/start",query:{flowId:e.id}})};return S(()=>{_()}),(e,n)=>(a(),r("div",E,[(a(!0),r(p,null,d(u.value,(o,s)=>(a(),r("div",{class:"item",key:s},[l("h3",null,g(y.value[s]||"未分组"),1),l("div",L,[(a(!0),r(p,null,d(o,t=>(a(),r("div",{key:t.id,onClick:i=>f(t)},[c(t.icon,0)?(a(),r("i",{key:0,class:q(["icon",c(t.icon,0)]),style:x({background:c(t.icon,1)})},null,6)):z("",!0),l("span",null,g(t.name),1)],8,N))),128))])]))),128))]))}});export{I as default};
